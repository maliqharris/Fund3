static void PrintList(List<string> MyList)
{
    foreach (string item in MyList)
    {
        Console.WriteLine(item);
    }
}
List<string> TestStringList = new List<string>() {"Harry", "Steve", "Carla", "Jeanne"};
PrintList(TestStringList);


static void SumOfNumbers(List<int> IntList)

{
    int sum = 0;
    foreach(int item in IntList)
    {
    sum += item;
    }
    Console.WriteLine(sum);
}
List<int> TestIntList = new List<int>() {2,7,12,9,3};
// You should get back 33 in this example
SumOfNumbers(TestIntList);


static int FindMax(List<int> IntList)
{
    int current = 0;
    foreach(int item in IntList)
    {
        if (item > current)
        {
            current = item;
        }

        

    }
    return current;
}
List<int> TestIntList2 = new List<int>() {-9,12,10,3,17,5};
// You should get back 17 in this example
Console.WriteLine(FindMax(TestIntList2));

static List<int> SquareValues(List<int> IntList)
{
    // Your code here
}
List<int> TestIntList3 = new List<int>() {1,2,3,4,5};
// You should get back [1,4,9,16,25], think about how you will show that this worked
SquareValues(TestIntList3);


static int[] NonNegatives(int[] IntArray)
{
    for( int i = 0; i < IntArray.Length; i++)
    {
        if(IntArray[i] < 0)
        {
            IntArray[i] = 0;
        }
    }
    return IntArray
}
int[] TestIntArray = new int[] {-1,2,3,-4,5};
int[] newRay = NonNegatives(TestIntArray);
for (int i = 0; i < newRay.Length; i++)
{
    Console.WriteList(newRay[i]);
    if (i < newRay.Length -1)
    {
        console.WriteList(", ");
    }
}




 static void PrintDictionary(Dictionary<string, string> MyDictionary)
    {
        foreach (KeyValuePair<string, string> entry in MyDictionary)
        {
            Console.WriteLine($"{entry.Key}: {entry.Value}");
        }
    }
        Dictionary<string,string> TestDict = new Dictionary<string,string>();
        TestDict.Add("HeroName", "Iron Man");
        TestDict.Add("RealName", "Tony Stark");
        TestDict.Add("Powers", "Money and intelligence");

static bool FindKey(Dictionary<string,string> MyDictionary, string SearchTerm)
{
   return MyDictionary.ContainsKey(SearchTerm);
}
// Use the TestDict from the earlier example or make your own
// This should print true
Console.WriteLine(FindKey(TestDict, "RealName"));
// This should print false
Console.WriteLine(FindKey(TestDict, "Name"));



// Ex: Given ["Julie", "Harold", "James", "Monica"] and [6,12,7,10], return a dictionary
// {
//	"Julie": 6,
//	"Harold": 12,
//	"James": 7,
//	"Monica": 10
// } 
static Dictionary<string,int> GenerateDictionary(List<string> Names, List<int> Numbers)
{
    Dictionary<string, int> resultDict = new Dictionary<string, int>();

    for (int i = 0; i < names.Count; i++)
    {
        resultDict.Add(names[i], numbers[i]);
    }

    return resultDict;
}
// We've shown several examples of how to set your tests up properly, it's your turn to set it up!
// Your test code here



